// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model House {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  name       String
  latitude   Float
  longitude  Float
  altitude   Float?
  floorCount Int      @default(1)
  roomCount  Int      @default(1)
  stepCount  Int      @default(1)
  structure  Json?

  units Unit[]
}

model Unit {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  houseId   Int
  name      String
  type      String
  floor     Int      @default(1)
  index     Int
  comment   String?

  house  House   @relation(fields: [houseId], references: [id], onDelete: Cascade)
  checks Check[]
  images Image[]

  @@unique([houseId, type, floor, index], name: "unit_unique_key")
}

model Check {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  unitId    Int
  rank      String?
  checkId   Int
  isHidden  Boolean  @default(false)

  unit Unit @relation(fields: [unitId], references: [id], onDelete: Cascade)

  @@unique([checkId, unitId], name: "unit_check_unique_key")
}

model Image {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  unitId    Int
  unit      Unit     @relation(fields: [unitId], references: [id], onDelete: Cascade)
  base64    String
  comment   String?
}
